export BUILDKIT_PROGRESS=plain

KDIR := $(PWD)/linux-6.1.5
KCONFIG := ${KDIR}/.config
KIMG := ${KDIR}/arch/x86/boot/bzImage
MKDIR ?= ${KDIR}

# Call `make CRASH=1` to compile the to crash the kernel
# `make kernel-nullderef-run`  will load the module into kernel
# This only works if your kernel doesn't check for signed modules.
# It's recommended to compile a kernel with `make defconfig` and only
# load this module within a virtual machine.
CRASH_KERNEL = ""
ifeq ($(CRASH), 1)
	CRASH_KERNEL = "-DCRASH"
endif

.PHONY: all
all:
	$(MAKE) -C user-nullderef build
	$(MAKE) KDIR=$(MKDIR) KCFLAGS=$(CRASH_KERNEL) -C kernel-nullderef PWD=$(PWD)/kernel-nullderef all
	$(MAKE) -C container container-build

.PHONY: clean
clean:
	$(MAKE) -C user-nullderef clean
	$(MAKE) KDIR=$(KDIR) -C kernel-nullderef PWD=$(PWD)/kernel-nullderef clean
	$(MAKE) -C container container-clean

.PHONY: container-run
container-run:
	$(MAKE) -C container container-run

.PHONY: user-nullderef-run
user-nullderef-run:
	$(MAKE) -C user-nullderef run

.PHONY: kernel-nullderef-run
kernel-nullderef-run: kernel-nullderef-unload
	sudo insmod kernel-nullderef/nullderef.ko

.PHONY: kernel-nullderef-unload
kernel-nullderef-unload:
	-sudo rmmod nullderef

.PHONY: vm
vm: ${KIMG}
	virtme-ng --verbose --debug -m 8G -r ${KIMG} --net user

${KIMG}: ${KCONFIG}
	cd linux-6.1.5 && virtme-ng --verbose -b -S

${KCONFIG}: config.fragment linux-6.1.5
	cd linux-6.1.5 && virtme-ng --verbose -S --kconfig -f ../config.fragment

${KDIR}:
	git clone --depth=1 --branch=v6.1.5 git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git ${KDIR}

